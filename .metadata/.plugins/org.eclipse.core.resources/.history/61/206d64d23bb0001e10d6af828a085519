package com.myweb.www.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.myweb.www.domain.BoardDTO;
import com.myweb.www.domain.BoardVO;
import com.myweb.www.domain.FileVO;
import com.myweb.www.domain.PagingVO;
import com.myweb.www.repository.BoardDAO;
import com.myweb.www.repository.FileDAO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Service
public class BoardServiceImple implements BoardService{
	
	private final BoardDAO bdao;
	
	private final FileDAO fdao;
	

//	@Override
//	public int insert(BoardVO bvo) {
//		log.info("insert service impl");
//		return bdao.insert(bvo);
//	}
	
	@Override
	public int insert(BoardDTO bdto) {
		log.info("insert service impl");
		//기존 보드 내용을 DB에 저장
		int isOk = bdao.insert(bdto.getBvo());
		
		// flist를 db에 저장
		if(bdto.getFlist() == null) {
			// 파일의 값이 없다면....
			return isOk;	// 그냥 성공한 걸로 처리
		} else {
			// 파일 저장
			if(isOk >0 && bdto.getFlist().size()>0) {

				long bno = bdao.selectOneBno();
				for(FileVO fvo : bdto.getFlist()) {
					fvo.setBno(bno);
					// 파일 (실제) 저장
					isOk *= fdao.insertFile(fvo);
				}	
			}
		}
		return isOk;
	}
	
	/*
	@Override
	public List<BoardVO> getList() {
		log.info("getList service impl");
		return bdao.getList();
	}
	*/
	
	@Override
	public List<BoardVO> getList(PagingVO pgvo) {
		log.info("getList service impl");
		return bdao.getList(pgvo);
	}

	@Override
	public BoardDTO getDetail(long bno) {
		int isOk = bdao.readCount(bno);
		BoardVO bvo = bdao.getDetail(bno);
		List<FileVO> flist = fdao.getFileList(bno);
		BoardDTO bdto = new BoardDTO(bvo, flist);
		return bdto;
	}

//	@Override
//	public int modify(BoardVO bvo) {
//		log.info("Modify service impl");		
//		return bdao.update(bvo);
//	}
	
	@Override
	public int modify(BoardDTO bdto) {
		log.info("modify service impl");
		int isOk = bdao.update(bdto.getBvo());
		if(bdto.getFlist() == null) {
			// 파일의 값이 없다면....
			return isOk;	// 그냥 성공한 걸로 처리
		} else {
			// 파일 저장
			if(isOk >0 && bdto.getFlist().size()>0) {
				long bno = bdto.getBvo().getBno();
//				long bno = bdao.selectOneBno();
				for(FileVO fvo : bdto.getFlist()) {
					fvo.setBno(bno);
					// 파일 (실제) 저장
					isOk *= fdao.insertFile(fvo);
				}
				
			}
		}
		return isOk;
	}
	

	@Override
	public int delete(long bno) {
		log.info("delete service impl");	
		return bdao.delete(bno);
	}

	@Override
	public int getTotalCount(PagingVO pgvo) {
		log.info("getTotalCount service impl");
		return bdao.getTotalCount(pgvo);
	}

	@Override
	public int removeFile(String uuid) {
		// TODO Auto-generated method stub
		return fdao.removeFile(uuid);
	}




	
}
